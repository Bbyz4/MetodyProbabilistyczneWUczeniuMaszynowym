import data_split as ds
import numpy as np
import matplotlib.pyplot as plt
import math

#theta = [0.151, -0.018, -0.009, 0.529, 0.177, 0.002, -0.01] #(1.0)
theta = [0.148, 0.028, -0.008, 0.52, 0.173, 0.003, 0.037] #(1.2)

theta1dim = {
    (0,): 0.151,
    (1,): -0.018,
    (2,): -0.009,
    (3,): 0.529,
    (4,): 0.177,
    (5,): 0.002,
    (6,): -0.01
}

theta1dimReg2 = {
    (0,): 0.147,
    (1,): -0.010,
    (2,): -0.008,
    (3,): 0.519,
    (4,): 0.173,
    (5,): 0.003,
    (6,): -0.003
}

theta1dimReg1 = {
    (0,): 0.145,
    (1,): 0.000,
    (2,): -0.008,
    (3,): 0.505,
    (4,): 0.166,
    (5,): 0.003,
    (6,): 0.010
}

# Dictionary for k = 2
theta2dim = {
    (0, 0): -0.023580731603355266,
    (0, 1): 0.07799713997196897,
    (1, 1): 0.10358496486032125,
    (0, 2): 0.21574875072041771,
    (1, 2): -0.025793388831978025,
    (2, 2): -0.04599345183735716,
    (0, 3): 0.018922982202966718,
    (1, 3): 0.17496647042694952,
    (2, 3): -0.008795049994052753,
    (3, 3): 0.18591546620913535,
    (0, 4): -0.013842126641964969,
    (1, 4): 0.05272316299256859,
    (2, 4): -0.040805232106261705,
    (3, 4): 0.3306229004916504,
    (4, 4): -0.0036091783793057762,
    (0, 5): -0.02259787492905676,
    (1, 5): 0.03303907773469417,
    (2, 5): -0.03243228100559649,
    (3, 5): 0.0020617556454254862,
    (4, 5): -0.016780427118233094,
    (5, 5): 0.0042176523832247095,
    (0, 6): 0.0812692763283126,
    (1, 6): 0.1975497074968556,
    (2, 6): -0.01912193507855483,
    (3, 6): 0.1734978650594097,
    (4, 6): 0.0659683800112904,
    (5, 6): 0.0353896867320444,
    (6, 6): 0.10177071721524408
}

theta2dimReg2 = {
    (0, 0): -0.018,
    (0, 1): 0.072,
    (1, 1): 0.106,
    (0, 2): 0.208,
    (1, 2): -0.024,
    (2, 2): -0.049,
    (0, 3): 0.027,
    (1, 3): 0.168,
    (2, 3): 0.007,
    (3, 3): 0.180,
    (0, 4): -0.010,
    (1, 4): 0.051,
    (2, 4): -0.038,
    (3, 4): 0.317,
    (4, 4): 0.001,
    (0, 5): -0.024,
    (1, 5): 0.033,
    (2, 5): -0.036,
    (3, 5): 0.009,
    (4, 5): -0.014,
    (5, 5): 0.008,
    (0, 6): 0.079,
    (1, 6): 0.192,
    (2, 6): -0.016,
    (3, 6): 0.171,
    (4, 6): 0.068,
    (5, 6): 0.033,
    (6, 6): 0.097
}

theta2dimReg1 = {
    (0, 0): -0.006,
    (0, 1): 0.069,
    (1, 1): 0.107,
    (0, 2): 0.204,
    (1, 2): -0.026,
    (2, 2): -0.040,
    (0, 3): 0.012,
    (1, 3): 0.159,
    (2, 3): -0.008,
    (3, 3): 0.205,
    (0, 4): -0.011,
    (1, 4): 0.044,
    (2, 4): -0.042,
    (3, 4): 0.326,
    (4, 4): 0.008,
    (0, 5): -0.019,
    (1, 5): 0.034,
    (2, 5): -0.032,
    (3, 5): 0.004,
    (4, 5): -0.015,
    (5, 5): 0.003,
    (0, 6): 0.072,
    (1, 6): 0.197,
    (2, 6): -0.016,
    (3, 6): 0.156,
    (4, 6): 0.054,
    (5, 6): 0.035,
    (6, 6): 0.106
}

# Dictionary for k = 3
theta3dim = {
    (0, 0, 0): -0.04181898895239587,
    (0, 0, 1): 0.04165886138000123,
    (0, 1, 1): 0.059664441751732154,
    (1, 1, 1): 0.1303604906440931,
    (0, 0, 2): 0.03699947869454598,
    (0, 1, 2): 0.0579953785184988,
    (1, 1, 2): -0.04522891767908832,
    (0, 2, 2): 0.10497060653504944,
    (1, 2, 2): 0.00020736134793712834,
    (2, 2, 2): -0.04579736169126949,
    (0, 0, 3): -0.0028687593664542127,
    (0, 1, 3): 0.05976440521685054,
    (1, 1, 3): 0.15714161625801099,
    (0, 2, 3): 0.010559753271439707,
    (1, 2, 3): 0.030702482421335758,
    (2, 2, 3): 0.00048383565488533087,
    (0, 3, 3): -0.045594626282566254,
    (1, 3, 3): 0.15700815411028327,
    (2, 3, 3): -0.058716847967752374,
    (3, 3, 3): 0.06535201015784967,
    (0, 0, 4): -0.05128351031909466,
    (0, 1, 4): 0.026459865584626395,
    (1, 1, 4): 0.042351279598439796,
    (0, 2, 4): 0.033430842420286024,
    (1, 2, 4): -0.008784865815551438,
    (2, 2, 4): -0.019260334826323482,
    (0, 3, 4): 0.026648352499142207,
    (1, 3, 4): 0.14255534117423643,
    (2, 3, 4): 0.03450102043507407,
    (3, 3, 4): 0.09760050771275172,
    (0, 4, 4): -0.03623989400067482,
    (1, 4, 4): 0.04402644641336351,
    (2, 4, 4): -0.051221599373453885,
    (3, 4, 4): 0.11399232518280156,
    (4, 4, 4): -0.027612010923079695,
    (0, 0, 5): -0.04033065823316387,
    (0, 1, 5): 0.03356562686180947,
    (1, 1, 5): -0.0033442114889994435,
    (0, 2, 5): 0.04986601051877147,
    (1, 2, 5): -0.0135489724603201,
    (2, 2, 5): -0.011294787658620875,
    (0, 3, 5): -0.03323078967085209,
    (1, 3, 5): 0.04746123436356627,
    (2, 3, 5): -0.019620607044590482,
    (3, 3, 5): -0.044507368987752274,
    (0, 4, 5): -0.010823375425378211,
    (1, 4, 5): 0.013507073544398392,
    (2, 4, 5): -0.003166355264596661,
    (3, 4, 5): 0.03845720115984327,
    (4, 4, 5): -0.04104329920686393,
    (0, 5, 5): -0.008927340677074656,
    (1, 5, 5): 0.031393605055034496,
    (2, 5, 5): -0.029109766366818966,
    (3, 5, 5): -0.0016654180906762665,
    (4, 5, 5): -0.01208964284324686,
    (5, 5, 5): -0.012987486937623716,
    (0, 0, 6): 0.05743693570261639,
    (0, 1, 6): 0.15674877663075176,
    (1, 1, 6): 0.20610395083790464,
    (0, 2, 6): 0.05424765522490438,
    (1, 2, 6): 0.1057771662069377,
    (2, 2, 6): -0.007541550933403485,
    (0, 3, 6): 0.06741876786414489,
    (1, 3, 6): 0.22494861133517668,
    (2, 3, 6): 0.034880628623782425,
    (3, 3, 6): 0.15486543269288502,
    (0, 4, 6): 0.03427447004100237,
    (1, 4, 6): 0.14739159130067914,
    (2, 4, 6): -0.002266737376125612,
    (3, 4, 6): 0.1370563275881716,
    (4, 4, 6): 0.04221189562618588,
    (0, 5, 6): 0.011765945579427834,
    (1, 5, 6): 0.12516868833232303,
    (2, 5, 6): -0.007169195828157312,
    (3, 5, 6): 0.04814441781108532,
    (4, 5, 6): 0.014341112501992787,
    (5, 5, 6): 0.033673735875994044,
    (0, 6, 6): 0.05829120206432152,
    (1, 6, 6): 0.21161542086863463,
    (2, 6, 6): -0.040363001378857385,
    (3, 6, 6): 0.15536942596365144,
    (4, 6, 6): 0.051536990341605485,
    (5, 6, 6): 0.004117507928805694,
    (6, 6, 6): 0.12975154091030414
}

thetas = {
    (1, "no reg"): theta1dim,
    (1, "l_2 reg"): theta1dimReg2,
    (1, "l_1 reg"): theta1dimReg1
}

def CreateIterationRange(start, end, deg):
    if deg == 1:
        return [(i,) for i in range(7)]
    
    prevTupleList = CreateIterationRange(start, end, deg-1)
    return [(i,) + tup for tup in prevTupleList for i in range(tup[0]+1)]

_,_,wholeSet = ds.GetDataSplit(0,0,1)

actual_y_values = [wholeSet[i][7] for i in  range(len(wholeSet))]


plt.figure(figsize=(8,8))

for key in thetas.keys():
    iterRange = CreateIterationRange(0,6,key[0])

    
    predicted_y_values = []
    m = len(wholeSet)
    theta = thetas[key]
    
    for k in range(m):
        newYPred = 0
        for tup in iterRange:
            newYPred += theta[tup] * math.prod([wholeSet[k][tupElem] for tupElem in tup])
        predicted_y_values.append(newYPred)
    
    plt.plot(actual_y_values, predicted_y_values, 'x', label=f"{key}")
    
plt.axline([0,0], [1,1], ls="--", label="Ideal prediction", color="red")

plt.xlabel("Actual y values")
plt.ylabel("Predicted y values")
plt.title("Comparasion between different regularization strategies")
plt.legend()
plt.show()

#Błędy z poprzednich eksperymentów:
# 1: 0.003365
# 2: 0.001235
# 3: 0.001285

# 1 l_2 reg: 0.003324
# 1 l_1 reg: 0.003294


# 2 l_1 reg: 0.001350
